version: '3.7'

services:
  caddy:
    container_name: Reverse_Proxy
    image: caddy:2-alpine
    volumes:
      - ${CADDYFILE}:/etc/caddy/Caddyfile
      - ${CADDY_DATA_DIR}:/data
      - ${CADDY_CONF_DIR}:/config
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      web:
        ipv4_address: 192.168.1.3

  nginx:
    container_name: Web_Server
    image: nginx:stable-alpine
    volumes:
      - ${NGINX_CONF_DIR}:/etc/nginx/conf.d
      - ${NGINX_LOG_DIR}:/var/log/nginx
      - ${WORDPRESS_DATA_DIR}:/var/www/html
    depends_on:
      - wordpress
    restart: unless-stopped
    networks:
      private_net:
        ipv4_address: 172.18.1.1
      web:
        ipv4_address: 192.168.1.11

  wordpress:
    container_name: WordPress
    image: wordpress:php7.4-fpm-alpine
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wordpress:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX}
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      private_net:
        ipv4_address: 172.18.1.2

  redis:
    container_name: DB_CACHE
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - ./redis:/var/lib/redis
    environment:
     - REDIS_REPLICATION_MODE=master
    links:
      - wordpress
    restart: unless-stopped
    networks:
      private_net:
        ipv4_address: 172.18.1.3

  db:
    container_name: DB
    image: mariadb:10.5
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    restart: unless-stopped
    networks:
      private_net:
        ipv4_address: 172.18.1.4

  portainer:
    container_name: DEV_PANEL
    image: portainer/portainer-ce
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      web:
        ipv4_address: 192.168.1.7

networks:
  web:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
  private_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16

volumes:
  portainer_data: {}